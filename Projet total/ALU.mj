const WORD_SIZE = 64
const INSTR_SIZE = 32
const OP_SIZE = 5
const REG_SIZE = 5
const STATUS_SIZE = 5

or_for_n<n>(a:[n], b:[n]) = (o:[n]) where
    if n=0 then
        o=[]
    else
        q=or_for_n<n-1>(a[1..],b[1..]);
        t=a[0] or b[0];
        o = t.q
    end if
end where

fulladder(a, b, c_in) = (o, c_out) where
    t = a ^ b;
    o = c_in ^ t;
    c_out = (a & b) or (t & c_in);
end where

nadder<n>(a:[n], b:[n], c_in) = (o:[n], c_out) where
    if n = 0 then
        o = [];
        c_out = c_in;
    else 
        (o_low, c_low) = nadder<n-1>(a[1..], b[1..], c_in);
        (o_high, c_out) = fulladder(a[0], b[0], c_low);
        o = o_high . o_low;
    end if
end where

main(opcode:[OP_SIZE],r1:[REG_SIZE],r2:[REG_SIZE],status:[STATUS_SIZE]) = 

