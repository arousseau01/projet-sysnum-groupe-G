fulladder(a,b,c) = (s, r) where
  s = (a ^ b) ^ c;
  r = (a & b) + ((a ^ b) & c);
end where

adder<n>(a:[n], b:[n], c_in) = (o:[n], c_out) where
  if n = 0 then
    o = [];
    c_out = 0
  else
    (s_n1, c_n1) = adder<n-1>(a[1..], b[1..], c_in);
    (s_n, c_out) = fulladder(a[0], b[0], c_n1);
    o = s_n . s_n1
  end if
end where

un<n>() = (u:[n]) where if n=1 then u = 1 else u = 0.un<n-1>() end if end where
regn<n>(x:[n]) = (y:[n]) where 
  if n=0 then y = [] 
  else y = reg(x[0]).regn<n-1>(x[1..]) 
end if end where

main() = (pc:[64]) where
  instr = rom<64, 32>(pc);
  delta = un<64>();
  (pc, c_out) = adder<64> (regn<64>(pc), delta, 0)
end where